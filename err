src/Graph.cpp: In member function 'bool Graph::loadFromFile(const char*)':
src/Graph.cpp:67:41: error: no matching function for call to 'std::map<std::basic_string<char>, Node*>::insert(__gnu_cxx::__alloc_traits<std::allocator<std::basic_string<char> > >::value_type&, Node*&)'
         this->nodes.insert(record[1], n2);
                                         ^
src/Graph.cpp:67:41: note: candidates are:
In file included from /usr/include/c++/4.8.2/map:61:0,
                 from src/Graph.hpp:5,
                 from src/Graph.cpp:1:
/usr/include/c++/4.8.2/bits/stl_map.h:594:7: note: std::pair<typename std::_Rb_tree<_Key, std::pair<const _Key, _Tp>, std::_Select1st<std::pair<const _Key, _Tp> >, _Compare, typename _Alloc::rebind<std::pair<const _Key, _Tp> >::other>::iterator, bool> std::map<_Key, _Tp, _Compare, _Alloc>::insert(const value_type&) [with _Key = std::basic_string<char>; _Tp = Node*; _Compare = std::less<std::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::basic_string<char>, Node*> >; typename std::_Rb_tree<_Key, std::pair<const _Key, _Tp>, std::_Select1st<std::pair<const _Key, _Tp> >, _Compare, typename _Alloc::rebind<std::pair<const _Key, _Tp> >::other>::iterator = std::_Rb_tree_iterator<std::pair<const std::basic_string<char>, Node*> >; std::map<_Key, _Tp, _Compare, _Alloc>::value_type = std::pair<const std::basic_string<char>, Node*>]
       insert(const value_type& __x)
       ^
/usr/include/c++/4.8.2/bits/stl_map.h:594:7: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/4.8.2/bits/stl_map.h:602:9: note: template<class _Pair, class> std::pair<typename std::_Rb_tree<_Key, std::pair<const _Key, _Tp>, std::_Select1st<std::pair<const _Key, _Tp> >, _Compare, typename _Alloc::rebind<std::pair<const _Key, _Tp> >::other>::iterator, bool> std::map<_Key, _Tp, _Compare, _Alloc>::insert(_Pair&&) [with _Pair = _Pair; <template-parameter-2-2> = <template-parameter-1-2>; _Key = std::basic_string<char>; _Tp = Node*; _Compare = std::less<std::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::basic_string<char>, Node*> >]
         insert(_Pair&& __x)
         ^
/usr/include/c++/4.8.2/bits/stl_map.h:602:9: note:   template argument deduction/substitution failed:
src/Graph.cpp:67:41: note:   candidate expects 1 argument, 2 provided
         this->nodes.insert(record[1], n2);
                                         ^
In file included from /usr/include/c++/4.8.2/map:61:0,
                 from src/Graph.hpp:5,
                 from src/Graph.cpp:1:
/usr/include/c++/4.8.2/bits/stl_map.h:615:7: note: void std::map<_Key, _Tp, _Compare, _Alloc>::insert(std::initializer_list<std::pair<const _Key, _Tp> >) [with _Key = std::basic_string<char>; _Tp = Node*; _Compare = std::less<std::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::basic_string<char>, Node*> >]
       insert(std::initializer_list<value_type> __list)
       ^
/usr/include/c++/4.8.2/bits/stl_map.h:615:7: note:   candidate expects 1 argument, 2 provided
/usr/include/c++/4.8.2/bits/stl_map.h:644:7: note: std::map<_Key, _Tp, _Compare, _Alloc>::iterator std::map<_Key, _Tp, _Compare, _Alloc>::insert(std::map<_Key, _Tp, _Compare, _Alloc>::const_iterator, const value_type&) [with _Key = std::basic_string<char>; _Tp = Node*; _Compare = std::less<std::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::basic_string<char>, Node*> >; std::map<_Key, _Tp, _Compare, _Alloc>::iterator = std::_Rb_tree_iterator<std::pair<const std::basic_string<char>, Node*> >; std::map<_Key, _Tp, _Compare, _Alloc>::const_iterator = std::_Rb_tree_const_iterator<std::pair<const std::basic_string<char>, Node*> >; std::map<_Key, _Tp, _Compare, _Alloc>::value_type = std::pair<const std::basic_string<char>, Node*>]
       insert(const_iterator __position, const value_type& __x)
       ^
/usr/include/c++/4.8.2/bits/stl_map.h:644:7: note:   no known conversion for argument 1 from '__gnu_cxx::__alloc_traits<std::allocator<std::basic_string<char> > >::value_type {aka std::basic_string<char>}' to 'std::map<std::basic_string<char>, Node*>::const_iterator {aka std::_Rb_tree_const_iterator<std::pair<const std::basic_string<char>, Node*> >}'
/usr/include/c++/4.8.2/bits/stl_map.h:655:9: note: template<class _Pair, class> std::map<_Key, _Tp, _Compare, _Alloc>::iterator std::map<_Key, _Tp, _Compare, _Alloc>::insert(std::map<_Key, _Tp, _Compare, _Alloc>::const_iterator, _Pair&&) [with _Pair = _Pair; <template-parameter-2-2> = <template-parameter-1-2>; _Key = std::basic_string<char>; _Tp = Node*; _Compare = std::less<std::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::basic_string<char>, Node*> >]
         insert(const_iterator __position, _Pair&& __x)
         ^
/usr/include/c++/4.8.2/bits/stl_map.h:655:9: note:   template argument deduction/substitution failed:
src/Graph.cpp:67:41: note:   cannot convert 'record.std::vector<_Tp, _Alloc>::operator[]<std::basic_string<char>, std::allocator<std::basic_string<char> > >(1ul)' (type '__gnu_cxx::__alloc_traits<std::allocator<std::basic_string<char> > >::value_type {aka std::basic_string<char>}') to type 'std::map<std::basic_string<char>, Node*>::const_iterator {aka std::_Rb_tree_const_iterator<std::pair<const std::basic_string<char>, Node*> >}'
         this->nodes.insert(record[1], n2);
                                         ^
In file included from /usr/include/c++/4.8.2/map:61:0,
                 from src/Graph.hpp:5,
                 from src/Graph.cpp:1:
/usr/include/c++/4.8.2/bits/stl_map.h:670:9: note: template<class _InputIterator> void std::map<_Key, _Tp, _Compare, _Alloc>::insert(_InputIterator, _InputIterator) [with _InputIterator = _InputIterator; _Key = std::basic_string<char>; _Tp = Node*; _Compare = std::less<std::basic_string<char> >; _Alloc = std::allocator<std::pair<const std::basic_string<char>, Node*> >]
         insert(_InputIterator __first, _InputIterator __last)
         ^
/usr/include/c++/4.8.2/bits/stl_map.h:670:9: note:   template argument deduction/substitution failed:
src/Graph.cpp:67:41: note:   deduced conflicting types for parameter '_InputIterator' ('std::basic_string<char>' and 'Node*')
         this->nodes.insert(record[1], n2);
                                         ^
make: *** [build/obj/Graph.o] Error 1
